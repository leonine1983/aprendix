
@login_required
def home_professor(request):
    userProfessor = request.user.related_vinculoUserPessoa
    request.session['professorUser'] = userProfessor
    pessoa = userProfessor.pessoa.id   

    trimestre = request.GET.get('trimestre')
    busca = request.GET.get('disciplina')   

    trimestreALL = Trimestre.objects.all()
    request.session['trimestres'] = trimestreALL
    
    if busca:
        request.session['escola']        
        trimestre_choice = Trimestre.objects.get(id=trimestre)
        final = trimestre_choice.final
        notas = GestaoTurmas.objects.filter(grade__id = busca, trimestre__id = trimestre)
        mural = "notas"

        """
        Obtém todos os alunos matriculados em uma turma específica a partir de uma instância de TurmaDisciplina.
        Processo:
        1. Recupera o objeto `TurmaDisciplina` com base no ID passado em `busca`.
        2. Acessa a `turma` associada àquela instância de `TurmaDisciplina`.
        3. Filtra todas as matrículas (`Matriculas`) que estão relacionadas a essa turma específica.
        Resultado:
        Uma queryset contendo todos os alunos matriculados na turma correspondente à disciplina buscada.
        """

        grade = TurmaDisciplina.objects.get(id=busca)
        turma = grade.turma
        alunos = Matriculas.objects.filter(turma = turma )
        compoeNotas = ComposicaoNotas.objects.filter(grade = grade )


        notas_dict = {}

        for a in alunos:
            notas_dict = {}  # Reiniciado a cada aluno
            for t in trimestreALL:
                for ac in a.compoeNotaAlunos_related.all():
                    if ac.trimestre.id == t.id and ac.grade == grade:
                        aluno_id = ac.aluno.id
                        notas_dict[aluno_id] = {
                            'aluno_nome': ac.aluno.aluno,
                            'notas': {},
                            'trimestre': t.numero_nome,
                            'trimestre_id': t.id,
                            'media_final': ac.media_final  # <-- Aqui você adiciona o campo desejado
                        }
                        notas_dict[aluno_id]['notas'][t.id] = ac.nota_final
        

                
    else:
        notas_dict = {}
        mural = ""
        trimestre_choice = {}
        notas = {}  
        alunos = {}  
        compoeNotas = {}
        grade = {}
        final = False
       

    # Pequisa pra verifica se existe matricula feita do aluno
    professorGrade = TurmaDisciplina.objects.filter(professor__encaminhamento__contratado__id=pessoa)
    request.session['turmaDisciplina'] = professorGrade
    ano = AnoLetivo.objects.all()
    
    return render(request, 'modulo_professor/home.html', {
        'notas_dict':notas_dict ,
        'final':final,        
        'professor':professorGrade,    
        'compoemNotas': compoeNotas,
        'notas':notas,
        'alunos':alunos,
        'mural': mural,
        'trimestre_choice':trimestre_choice,
        'grade':grade,
        'anoLetivo': ano})